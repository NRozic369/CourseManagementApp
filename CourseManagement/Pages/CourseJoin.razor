@page "/course-join/{courseid:int}"
@inject ICourseService CourseService
@inject IAttendeeService AttendeeService
@inject IToastService ToastService
@inject NavigationManager NavigationManager


<h1>Join <b>@course.CourseTitle</b></h1>
<hr />

<EditForm Model="attendee" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="FirstName">First name</label>
        <InputText id="FirstName" @bind-Value="attendee.FirstName" class="form-control"></InputText>
    </div>
    <div class="mb-3">
        <label for="LastName">Last name</label>
        <InputText id="LastName" @bind-Value="attendee.LastName" class="form-control"></InputText>
    </div>
    <div class="mb-3">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="attendee.Email" class="form-control"></InputText>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Join</button>

</EditForm>

@code {
    [Parameter]
    public int CourseId { get; set; }

    AttendeeModel attendee = new AttendeeModel();

    CourseDetailsModel course = new CourseDetailsModel();

    protected override async Task OnParametersSetAsync()
    {
        var response = await CourseService.GetCourseDetailsById(CourseId);
        if (response.IsSuccessful)
        {
            ToastService.ShowSuccess(response.Message);
            course = response.Data;
        }
        else
        {
            ToastService.ShowError(response.Message);
        }

        attendee.CourseId = CourseId;
    }

    private async Task HandleSubmit()
    {
        if (await CourseService.CheckIfCourseCapacityFull(CourseId))
        {
            if (await AttendeeService.CheckIfAttendeeExists(CourseId, attendee.FirstName, attendee.LastName, attendee.Email) == false)
            {
                var response = await AttendeeService.CreateAttendee(attendee);
                if (response.IsSuccessful)
                {
                    ToastService.ShowSuccess(response.Message);
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    ToastService.ShowError(response.Message);
                }
            }
            else
            {
                ToastService.ShowError("Attendee already exists");
            }
        }
        else
        {
            ToastService.ShowError("Course already full");
            NavigationManager.NavigateTo("/");
        }
    }
}
